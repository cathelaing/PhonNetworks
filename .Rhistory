unite(`95% CI`, c(conf.low, conf.high), sep = ",",)
full_A_19_coefs <- tidy(full_A_5,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",)
full_A_21_coefs <- tidy(full_A_5,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",)
full_A_24_coefs <- tidy(full_A_5,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",)
full_A_33_coefs <- tidy(full_A_5,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",)
full_A_5_coefs <- tidy(full_A_5,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",)
full_A_15_coefs <- tidy(full_A_5,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.15)
full_A_15_coefs <- tidy(full_A_5,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.15)
full_A_18_coefs <- tidy(full_A_5,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.18)
full_A_19_coefs <- tidy(full_A_5,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.19)
full_A_21_coefs <- tidy(full_A_5,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.21)
full_A_24_coefs <- tidy(full_A_5,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.24)
full_A_33_coefs <- tidy(full_A_5,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.33)
full_A_5_coefs <- tidy(full_A_5,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.5)
full_thresholdtest_tab <- corrs_thresholdtest %>%
left_join(full_A_15_coefs) %>%
left_join(full_A_18_coefs) %>%
left_join(full_A_19_coefs) %>%
left_join(full_A_21_coefs) %>%
left_join(full_A_24_coefs) %>%
left_join(full_A_33_coefs) %>%
left_join(full_A_5_coefs)
View(full_thresholdtest_tab)
corrs_thresholdtest <- table.aop.deg.corr.speaker_thresholdstest %>%
pivot_wider(names_from = data_type, values_from = rho) %>%
# rename("actual.rho" = "actual",
#        "target.rho" = "target") %>%
# select(threshold, actual.rho,target.rho) %>%
mutate(threshold = as.numeric(threshold)) %>%
left_join(network_diff_tab)
corrs_thresholdtest <- table.aop.deg.corr.speaker_thresholdstest %>%
# pivot_wider(names_from = data_type, values_from = rho) %>%
# rename("actual.rho" = "actual",
#        "target.rho" = "target") %>%
# select(threshold, actual.rho,target.rho) %>%
mutate(threshold = as.numeric(threshold)) %>%
left_join(network_diff_tab)
full_modeloutputs_tab <- #corrs_thresholdtest %>%
left_join(full_A_15_coefs) %>%
left_join(full_A_18_coefs) %>%
left_join(full_A_19_coefs) %>%
left_join(full_A_21_coefs) %>%
left_join(full_A_24_coefs) %>%
left_join(full_A_33_coefs) %>%
left_join(full_A_5_coefs)
full_modeloutputs_tab <- #corrs_thresholdtest %>%
full_A_15_coefs %>%
left_join(full_A_18_coefs) %>%
left_join(full_A_19_coefs) %>%
left_join(full_A_21_coefs) %>%
left_join(full_A_24_coefs) %>%
left_join(full_A_33_coefs) %>%
left_join(full_A_5_coefs)
View(full_modeloutputs_tab)
full_modeloutputs_tab <- rbind(full_A_15_coefs,
full_A_18_coefs,
full_A_19_coefs,
full_A_21_coefs,
full_A_24_coefs,
full_A_33_coefs,
full_A_5_coefs)
full_A_15_coefs <- tidy(full_A_15,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.15)
full_A_18_coefs <- tidy(full_A_18,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.18)
full_A_19_coefs <- tidy(full_A_19,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.19)
full_A_21_coefs <- tidy(full_A_21,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.21)
full_A_24_coefs <- tidy(full_A_24,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.24)
full_A_33_coefs <- tidy(full_A_33,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.33)
full_A_5_coefs <- tidy(full_A_5,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.5)
full_modeloutputs_tab <- rbind(full_A_15_coefs,
full_A_18_coefs,
full_A_19_coefs,
full_A_21_coefs,
full_A_24_coefs,
full_A_33_coefs,
full_A_5_coefs)
full_modeloutputs_tab <- rbind(full_A_15_coefs,
full_A_18_coefs,
full_A_19_coefs,
full_A_21_coefs,
full_A_24_coefs,
full_A_33_coefs,
full_A_5_coefs) %>%
pivot_wider(names_from = "term", values_from = estimate)
full_modeloutputs_tab <- rbind(full_A_15_coefs,
full_A_18_coefs,
full_A_19_coefs,
full_A_21_coefs,
full_A_24_coefs,
full_A_33_coefs,
full_A_5_coefs) %>%
pivot_wider(names_from = "term", values_from = c("threshold", "estimate", "p.value"))
full_modeloutputs_tab <- rbind(full_A_15_coefs,
full_A_18_coefs,
full_A_19_coefs,
full_A_21_coefs,
full_A_24_coefs,
full_A_33_coefs,
full_A_5_coefs) %>%
pivot_wider(names_from = "term", values_from = c("estimate", "p.value"))
full_modeloutputs_tab <- rbind(full_A_15_coefs,
full_A_18_coefs,
full_A_19_coefs,
full_A_21_coefs,
full_A_24_coefs,
full_A_33_coefs,
full_A_5_coefs) %>%
pivot_wider(names_from = "term", values_from = c("estimate", "p.value", `95% CI`))
full_T_15 <- glmer(learned_next ~
INT_scaled*age_scaled +
EXT_scaled_target*age_scaled +
length_scaled*age_scaled +
freq_scaled*age_scaled +
aoa_scaled*age_scaled +
corpus +
category +
(1+age_scaled|Speaker),
family=binomial("logit"),
control=glmerControl(calc.derivs=FALSE,
optimizer="bobyqa",
# specifiying optimizer to support convergence
#(does not converge without this)
optCtrl=list(maxfun=2e5)),
data=subset(reg_dat_thresholdstest, data_type == "target" & threshold == .15))
full_T_18 <- glmer(learned_next ~
INT_scaled*age_scaled +
EXT_scaled_target*age_scaled +
length_scaled*age_scaled +
freq_scaled*age_scaled +
aoa_scaled*age_scaled +
corpus +
category +
(1+age_scaled|Speaker),
family=binomial("logit"),
control=glmerControl(calc.derivs=FALSE,
optimizer="bobyqa",
# specifiying optimizer to support convergence
#(does not converge without this)
optCtrl=list(maxfun=2e5)),
data=subset(reg_dat_thresholdstest, data_type == "target" & threshold == .18))
full_T_19 <- glmer(learned_next ~
INT_scaled*age_scaled +
EXT_scaled_target*age_scaled +
length_scaled*age_scaled +
freq_scaled*age_scaled +
aoa_scaled*age_scaled +
corpus +
category +
(1+age_scaled|Speaker),
family=binomial("logit"),
control=glmerControl(calc.derivs=FALSE,
optimizer="bobyqa",
# specifiying optimizer to support convergence
#(does not converge without this)
optCtrl=list(maxfun=2e5)),
data=subset(reg_dat_thresholdstest, data_type == "target" & threshold == .19))
full_T_21 <- glmer(learned_next ~
INT_scaled*age_scaled +
EXT_scaled_target*age_scaled +
length_scaled*age_scaled +
freq_scaled*age_scaled +
aoa_scaled*age_scaled +
corpus +
category +
(1+age_scaled|Speaker),
family=binomial("logit"),
control=glmerControl(calc.derivs=FALSE,
optimizer="bobyqa",
# specifiying optimizer to support convergence
#(does not converge without this)
optCtrl=list(maxfun=2e5)),
data=subset(reg_dat_thresholdstest, data_type == "target" & threshold == .21))
full_T_24 <- glmer(learned_next ~
INT_scaled*age_scaled +
EXT_scaled_target*age_scaled +
length_scaled*age_scaled +
freq_scaled*age_scaled +
aoa_scaled*age_scaled +
corpus +
category +
(1+age_scaled|Speaker),
family=binomial("logit"),
control=glmerControl(calc.derivs=FALSE,
optimizer="bobyqa",
# specifiying optimizer to support convergence
#(does not converge without this)
optCtrl=list(maxfun=2e5)),
data=subset(reg_dat_thresholdstest, data_type == "target" & threshold == .24))
full_T_33 <- glmer(learned_next ~
INT_scaled*age_scaled +
EXT_scaled_target*age_scaled +
length_scaled*age_scaled +
freq_scaled*age_scaled +
aoa_scaled*age_scaled +
corpus +
category +
(1+age_scaled|Speaker),
family=binomial("logit"),
control=glmerControl(calc.derivs=FALSE,
optimizer="bobyqa",
# specifiying optimizer to support convergence
#(does not converge without this)
optCtrl=list(maxfun=2e5)),
data=subset(reg_dat_thresholdstest, data_type == "target" & threshold == .33))
full_T_5 <- glmer(learned_next ~
INT_scaled*age_scaled +
EXT_scaled_target*age_scaled +
length_scaled*age_scaled +
freq_scaled*age_scaled +
aoa_scaled*age_scaled +
corpus +
category +
(1+age_scaled|Speaker),
family=binomial("logit"),
control=glmerControl(calc.derivs=FALSE,
optimizer="bobyqa",
# specifiying optimizer to support convergence
#(does not converge without this)
optCtrl=list(maxfun=2e5)),
data=subset(reg_dat_thresholdstest, data_type == "target" & threshold == .5))
full_T_15_coefs <- tidy(full_T_15,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.15)
full_T_18_coefs <- tidy(full_T_18,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.18)
full_T_19_coefs <- tidy(full_T_19,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.19)
full_T_21_coefs <- tidy(full_T_21,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.21)
full_T_24_coefs <- tidy(full_T_24,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.24)
full_T_33_coefs <- tidy(full_T_33,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.33)
full_T_5_coefs <- tidy(full_T_5,effects="fixed",conf.int=TRUE) %>%
filter(term %in% c("INT_scaled", "EXT_scaled_target")) %>%
select(term, estimate, conf.low, conf.high ,p.value) %>%
mutate(p.value=scales::pvalue(p.value),
across(where(is.numeric), round, 2)) %>%
unite(`95% CI`, c(conf.low, conf.high), sep = ",",) %>%
mutate(threshold = 0.5)
full_modeloutputs_tab_target <- rbind(full_T_15_coefs,
full_T_18_coefs,
full_T_19_coefs,
full_T_21_coefs,
full_T_24_coefs,
full_T_33_coefs,
full_T_5_coefs) %>%
pivot_wider(names_from = "term", values_from = c("estimate", "p.value", `95% CI`))
full_modeloutputs_tab_actual <- rbind(full_A_15_coefs,
full_A_18_coefs,
full_A_19_coefs,
full_A_21_coefs,
full_A_24_coefs,
full_A_33_coefs,
full_A_5_coefs) %>%
pivot_wider(names_from = "term", values_from = c("estimate", "p.value", `95% CI`))
View(full_modeloutputs_tab_actual)
View(full_modeloutputs_tab_target)
View(full_thresholds)
network_diff_15_A <- nrow(subset(full_thresholds, data_type=="actual")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .15))
network_diff_18_A <- nrow(subset(full_thresholds, data_type=="actual")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .18))
network_diff_19_A <- nrow(subset(full_thresholds, data_type=="actual")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .19))
network_diff_21_A <- nrow(subset(full_thresholds, data_type=="actual")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .21))
network_diff_24_A <- nrow(subset(full_thresholds, data_type=="actual")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .24))
network_diff_33_A <- nrow(subset(full_thresholds, data_type=="actual")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .33))
network_diff_50_A <- nrow(subset(full_thresholds, data_type=="actual")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .5))
threshold <- c(.15, .18, .19, .21, .24, .33, .5)
network_diff_tab_actual <- data.frame(threshold) %>%
mutate(unconnected_words = rbind(network_diff_15_A,
network_diff_18_A,
network_diff_19_A,
network_diff_21_A,
network_diff_24_A,
network_diff_33_A,
network_diff_50_A))
network_diff_15_A <- nrow(subset(full_thresholds, data_type=="actual")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .15 & data_type=="actual"))
network_diff_18_A <- nrow(subset(full_thresholds, data_type=="actual")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .18 & data_type=="actual"))
network_diff_19_A <- nrow(subset(full_thresholds, data_type=="actual")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .19 & data_type=="actual"))
network_diff_21_A <- nrow(subset(full_thresholds, data_type=="actual")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .21 & data_type=="actual"))
network_diff_24_A <- nrow(subset(full_thresholds, data_type=="actual")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .24 & data_type=="actual"))
network_diff_33_A <- nrow(subset(full_thresholds, data_type=="actual")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .33 & data_type=="actual"))
network_diff_50_A <- nrow(subset(full_thresholds, data_type=="actual")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .5 & data_type=="actual"))
network_diff_tab_actual <- data.frame(threshold) %>%
mutate(unconnected_words = rbind(network_diff_15_A,
network_diff_18_A,
network_diff_19_A,
network_diff_21_A,
network_diff_24_A,
network_diff_33_A,
network_diff_50_A))
network_diff_15_T <- nrow(subset(full_thresholds, data_type=="target")) - nrow(subset(globalthresholds_TOP_thresholdstest, threshold == .15 & data_type=="target"))
network_diff_15_T <- nrow(subset(full_thresholds, data_type=="target")) - nrow(subset(globalthresholds_TOP_thresholdstest, threshold == .15 & data_type=="target"))
network_diff_15_T <- nrow(subset(full_thresholds, data_type=="target")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .15 & data_type=="target"))
table.aop.deg.corr.speaker_thresholdstest <- globalthresholds_AOP_thresholdstest %>%
group_by(data_type, threshold) %>%
summarize(rho = stats::cor.test(AOP, degree, method = "sp")$estimate,
pval = stats::cor.test(AOP, degree, method = "sp")$p.value
) %>%
ungroup() %>%
# arrange(corpus) %>%
rename(#"Corpus" = "corpus",
"p" = "pval") %>%
mutate(p = scales::pvalue(p),
significant = ifelse(p <.05, T, F))
thresholdstest_actual <- corrs_thresholdtest %>% filter(data_type == "actual")
View(thresholdstest_actual)
table.aop.deg.corr.speaker_thresholdstest <- globalthresholds_AOP_thresholdstest %>%
group_by(data_type, threshold) %>%
summarize(rho = stats::cor.test(AOP, degree, method = "sp")$estimate,
pval = stats::cor.test(AOP, degree, method = "sp")$p.value
) %>%
ungroup() %>%
# arrange(corpus) %>%
rename(#"Corpus" = "corpus",
"p" = "pval") %>%
mutate(p = scales::pvalue(p),
significant = ifelse(p <.05, T, F))
table.aop.deg.corr.speaker_thresholdstest
thresholdstest_actual <- table.aop.deg.corr.speaker_thresholdstest %>% filter(data_type == "actual")
network_diff_tab_target <- data.frame(threshold) %>%
mutate(unconnected_words = rbind(network_diff_15_T,
network_diff_18_T,
network_diff_19_T,
network_diff_21_T,
network_diff_24_T,
network_diff_33_T,
network_diff_50_T))
network_diff_15_T <- nrow(subset(full_thresholds, data_type=="target")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .15 & data_type=="target"))
network_diff_18_T <- nrow(subset(full_thresholds, data_type=="target")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .18 & data_type=="target"))
network_diff_19_T <- nrow(subset(full_thresholds, data_type=="target")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .19 & data_type=="target"))
network_diff_21_T <- nrow(subset(full_thresholds, data_type=="target")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .21 & data_type=="target"))
network_diff_24_T <- nrow(subset(full_thresholds, data_type=="target")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .24 & data_type=="target"))
network_diff_33_T <- nrow(subset(full_thresholds, data_type=="target")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .33 & data_type=="target"))
network_diff_50_T <- nrow(subset(full_thresholds, data_type=="target")) - nrow(subset(globalthresholds_AOP_thresholdstest, threshold == .5 & data_type=="target"))
network_diff_tab_target <- data.frame(threshold) %>%
mutate(unconnected_words = rbind(network_diff_15_T,
network_diff_18_T,
network_diff_19_T,
network_diff_21_T,
network_diff_24_T,
network_diff_33_T,
network_diff_50_T))
thresholdstest_actual <- table.aop.deg.corr.speaker_thresholdstest %>% filter(data_type == "actual") %>%
select(-p, -significant) %>%
left_join(network_diff_tab_actual)
table.aop.deg.corr.speaker_thresholdstest
table.aop.deg.corr.speaker_thresholdstest <- globalthresholds_AOP_thresholdstest %>%
group_by(data_type, threshold) %>%
summarize(rho = stats::cor.test(AOP, degree, method = "sp")$estimate,
pval = stats::cor.test(AOP, degree, method = "sp")$p.value
) %>%
ungroup() %>%
# arrange(corpus) %>%
rename(#"Corpus" = "corpus",
"p" = "pval") %>%
mutate(p = scales::pvalue(p),
significant = ifelse(p <.05, T, F),
threshold = as.numeric(threshold))
thresholdstest_actual <- table.aop.deg.corr.speaker_thresholdstest %>% filter(data_type == "actual") %>%
select(-p, -significant) %>%
left_join(network_diff_tab_actual)
thresholdstest_actual <- table.aop.deg.corr.speaker_thresholdstest %>% filter(data_type == "actual") %>%
select(-p, -significant) %>%
left_join(network_diff_tab_actual) %>%
left_join(full_modeloutputs_tab_actual)
thresholdstest_target <- table.aop.deg.corr.speaker_thresholdstest %>% filter(data_type == "target") %>%
select(-p, -significant) %>%
left_join(network_diff_tab_target) %>%
left_join(full_modeloutputs_tab_target)
